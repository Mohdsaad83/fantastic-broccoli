{"ast":null,"code":"var _jsxFileName = \"/Users/bosaad77/ga/porjects/fantastic-broccoli/src/contexts/Auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create axios instance with proper base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:3004\",\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Set up token in axios instance\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    }\n  }, []);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await api.get(\"/api/auth/me\");\n      if (response.data.success) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n      } else {\n        localStorage.removeItem(\"token\");\n        delete api.defaults.headers.common[\"Authorization\"];\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error);\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // Set axios default header\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n        // Update state\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || \"Login failed\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, userData);\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // Set axios default header\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n        // Update state\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || \"Registration failed\");\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\");\n    }\n  };\n\n  // Update user function\n  const updateUser = async userData => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/auth/profile`, userData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.data.success) {\n        const updatedUser = response.data.user;\n\n        // Update state\n        setUser(updatedUser);\n\n        // Also update localStorage if you store user data there\n        const existingProfile = localStorage.getItem(`profile_${user.id}`);\n        if (existingProfile) {\n          const profile = JSON.parse(existingProfile);\n          const updatedProfile = {\n            ...profile,\n            ...userData\n          };\n          localStorage.setItem(`profile_${user.id}`, JSON.stringify(updatedProfile));\n        }\n        return {\n          success: true,\n          user: updatedUser\n        };\n      } else {\n        throw new Error(response.data.message || \"Update failed\");\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Update user error:\", error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to update profile\");\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await axios.put(`${API_BASE_URL}/api/auth/change-password`, {\n        currentPassword,\n        newPassword\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.data.success) {\n        return {\n          success: true,\n          message: \"Password changed successfully\"\n        };\n      } else {\n        throw new Error(response.data.message || \"Password change failed\");\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Change password error:\", error);\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Failed to change password\");\n    }\n  };\n\n  // Delete account function\n  const deleteAccount = async () => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/api/auth/account`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      if (response.data.success) {\n        // Clear all user data\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(`profile_${user.id}`);\n        localStorage.removeItem(`notifications_${user.id}`);\n        localStorage.removeItem(`privacy_${user.id}`);\n        delete axios.defaults.headers.common[\"Authorization\"];\n\n        // Update state\n        setUser(null);\n        setIsAuthenticated(false);\n        return {\n          success: true,\n          message: \"Account deleted successfully\"\n        };\n      } else {\n        throw new Error(response.data.message || \"Account deletion failed\");\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Delete account error:\", error);\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Failed to delete account\");\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await axios.post(`${API_BASE_URL}/api/auth/logout`, {}, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n    } catch (error) {\n      console.error(\"Logout endpoint error:\", error);\n    } finally {\n      // Clear local storage and state regardless of API call success\n      localStorage.removeItem(\"token\");\n      delete axios.defaults.headers.common[\"Authorization\"];\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    updateUser,\n    // Add this\n    changePassword,\n    // Add this\n    deleteAccount,\n    // Add this\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"IZja/rYxMfdrDJzYcGoGecx9cBo=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","process","env","REACT_APP_API_URL","headers","AuthProvider","children","_s","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","defaults","common","checkAuthStatus","response","get","data","success","removeItem","error","console","login","email","password","post","API_BASE_URL","setItem","Error","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","updateUser","put","Authorization","updatedUser","existingProfile","id","profile","JSON","parse","updatedProfile","stringify","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","deleteAccount","delete","_error$response5","_error$response5$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/bosaad77/ga/porjects/fantastic-broccoli/src/contexts/Auth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst AuthContext = createContext()\n\n// Create axios instance with proper base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:3004\",\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  // Set up token in axios instance\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    }\n  }, [])\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus()\n  }, [])\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\")\n      if (!token) {\n        setLoading(false)\n        return\n      }\n\n      const response = await api.get(\"/api/auth/me\")\n\n      if (response.data.success) {\n        setUser(response.data.user)\n        setIsAuthenticated(true)\n      } else {\n        localStorage.removeItem(\"token\")\n        delete api.defaults.headers.common[\"Authorization\"]\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error)\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password,\n      })\n\n      if (response.data.success) {\n        const { token, user } = response.data\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token)\n\n        // Set axios default header\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n        // Update state\n        setUser(user)\n        setIsAuthenticated(true)\n\n        return { success: true, user }\n      } else {\n        throw new Error(response.data.message || \"Login failed\")\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      throw new Error(error.response?.data?.message || \"Login failed\")\n    }\n  }\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await axios.post(\n        `${API_BASE_URL}/api/auth/register`,\n        userData\n      )\n\n      if (response.data.success) {\n        const { token, user } = response.data\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token)\n\n        // Set axios default header\n        axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n        // Update state\n        setUser(user)\n        setIsAuthenticated(true)\n\n        return { success: true, user }\n      } else {\n        throw new Error(response.data.message || \"Registration failed\")\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      throw new Error(error.response?.data?.message || \"Registration failed\")\n    }\n  }\n\n  // Update user function\n  const updateUser = async (userData) => {\n    try {\n      const response = await axios.put(\n        `${API_BASE_URL}/api/auth/profile`,\n        userData,\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        }\n      )\n\n      if (response.data.success) {\n        const updatedUser = response.data.user\n\n        // Update state\n        setUser(updatedUser)\n\n        // Also update localStorage if you store user data there\n        const existingProfile = localStorage.getItem(`profile_${user.id}`)\n        if (existingProfile) {\n          const profile = JSON.parse(existingProfile)\n          const updatedProfile = { ...profile, ...userData }\n          localStorage.setItem(`profile_${user.id}`, JSON.stringify(updatedProfile))\n        }\n\n        return { success: true, user: updatedUser }\n      } else {\n        throw new Error(response.data.message || \"Update failed\")\n      }\n    } catch (error) {\n      console.error(\"Update user error:\", error)\n      throw new Error(error.response?.data?.message || \"Failed to update profile\")\n    }\n  }\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await axios.put(\n        `${API_BASE_URL}/api/auth/change-password`,\n        {\n          currentPassword,\n          newPassword,\n        },\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        }\n      )\n\n      if (response.data.success) {\n        return { success: true, message: \"Password changed successfully\" }\n      } else {\n        throw new Error(response.data.message || \"Password change failed\")\n      }\n    } catch (error) {\n      console.error(\"Change password error:\", error)\n      throw new Error(error.response?.data?.message || \"Failed to change password\")\n    }\n  }\n\n  // Delete account function\n  const deleteAccount = async () => {\n    try {\n      const response = await axios.delete(`${API_BASE_URL}/api/auth/account`, {\n        headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n      })\n\n      if (response.data.success) {\n        // Clear all user data\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(`profile_${user.id}`)\n        localStorage.removeItem(`notifications_${user.id}`)\n        localStorage.removeItem(`privacy_${user.id}`)\n        delete axios.defaults.headers.common[\"Authorization\"]\n\n        // Update state\n        setUser(null)\n        setIsAuthenticated(false)\n\n        return { success: true, message: \"Account deleted successfully\" }\n      } else {\n        throw new Error(response.data.message || \"Account deletion failed\")\n      }\n    } catch (error) {\n      console.error(\"Delete account error:\", error)\n      throw new Error(error.response?.data?.message || \"Failed to delete account\")\n    }\n  }\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await axios.post(\n        `${API_BASE_URL}/api/auth/logout`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\n        }\n      )\n    } catch (error) {\n      console.error(\"Logout endpoint error:\", error)\n    } finally {\n      // Clear local storage and state regardless of API call success\n      localStorage.removeItem(\"token\")\n      delete axios.defaults.headers.common[\"Authorization\"]\n      setUser(null)\n      setIsAuthenticated(false)\n    }\n  }\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    updateUser, // Add this\n    changePassword, // Add this\n    deleteAccount, // Add this\n    logout,\n    checkAuthStatus,\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}