{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport recipesAPI from \"../services/recipesAPI\";\nexport const useRecipes = () => {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fetch all recipes from database\n  const fetchRecipes = useCallback(async (params = {}) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await recipesAPI.getRecipes(params);\n      if (result.success) {\n        setRecipes(result.data);\n      } else {\n        setError(result.error || \"Failed to fetch recipes\");\n        setRecipes([]);\n      }\n    } catch (err) {\n      setError(\"Failed to fetch recipes\");\n      setRecipes([]);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Get single recipe by ID from database\n  const getRecipe = useCallback(async id => {\n    try {\n      const result = await recipesAPI.getRecipeById(id);\n      if (result.success) {\n        return result.data;\n      } else {\n        throw new Error(result.error || \"Recipe not found\");\n      }\n    } catch (err) {\n      throw new Error(\"Failed to fetch recipe\");\n    }\n  }, []);\n\n  // Add recipe to favorites\n  const addToFavorites = useCallback(async recipeId => {\n    try {\n      const result = await recipesAPI.addToFavorites(recipeId);\n      return result.success;\n    } catch (err) {\n      console.error(\"Error adding to favorites:\", err);\n      return false;\n    }\n  }, []);\n\n  // Remove recipe from favorites\n  const removeFromFavorites = useCallback(async recipeId => {\n    try {\n      const result = await recipesAPI.removeFromFavorites(recipeId);\n      return result.success;\n    } catch (err) {\n      console.error(\"Error removing from favorites:\", err);\n      return false;\n    }\n  }, []);\n\n  // Check if recipe is in favorites\n  const isFavorite = useCallback(async recipeId => {\n    try {\n      const result = await recipesAPI.isFavorite(recipeId);\n      return result.success ? result.data.isFavorite : false;\n    } catch (err) {\n      console.error(\"Error checking favorite status:\", err);\n      return false;\n    }\n  }, []);\n\n  // Get user's favorite recipes\n  const getFavorites = useCallback(async () => {\n    try {\n      const result = await recipesAPI.getFavorites();\n      return result.success ? result.data : [];\n    } catch (err) {\n      console.error(\"Error fetching favorites:\", err);\n      return [];\n    }\n  }, []);\n\n  // Create a new recipe\n  const createRecipe = useCallback(async recipeData => {\n    try {\n      const result = await recipesAPI.createRecipe(recipeData);\n      if (result.success) {\n        // Refresh recipes list if needed\n        await fetchRecipes();\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Error creating recipe:\", err);\n      return {\n        success: false,\n        error: err.message || \"Failed to create recipe\"\n      };\n    }\n  }, [fetchRecipes]);\n\n  // Update an existing recipe\n  const updateRecipe = useCallback(async (recipeId, recipeData) => {\n    try {\n      const result = await recipesAPI.updateRecipe(recipeId, recipeData);\n      if (result.success) {\n        // Refresh recipes list if needed\n        await fetchRecipes();\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Error updating recipe:\", err);\n      return {\n        success: false,\n        error: err.message || \"Failed to update recipe\"\n      };\n    }\n  }, [fetchRecipes]);\n\n  // Delete a recipe\n  const deleteRecipe = useCallback(async recipeId => {\n    try {\n      const result = await recipesAPI.deleteRecipe(recipeId);\n      if (result.success) {\n        // Refresh recipes list\n        await fetchRecipes();\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Error deleting recipe:\", err);\n      return {\n        success: false,\n        error: err.message || \"Failed to delete recipe\"\n      };\n    }\n  }, [fetchRecipes]);\n\n  // Get user's own recipes\n  const getUserRecipes = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await recipesAPI.getUserRecipes();\n      if (result.success) {\n        return result.data;\n      } else {\n        setError(result.error || \"Failed to fetch your recipes\");\n        return [];\n      }\n    } catch (err) {\n      setError(\"Failed to fetch your recipes\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Get all categories\n  const getCategories = useCallback(async () => {\n    try {\n      const result = await recipesAPI.getCategories();\n      return result.success ? result.data : [];\n    } catch (err) {\n      console.error(\"Error fetching categories:\", err);\n      return [];\n    }\n  }, []);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n  return {\n    recipes,\n    loading,\n    error,\n    fetchRecipes,\n    getRecipe,\n    addToFavorites,\n    removeFromFavorites,\n    isFavorite,\n    getFavorites,\n    createRecipe,\n    updateRecipe,\n    deleteRecipe,\n    getUserRecipes,\n    getCategories,\n    clearError\n  };\n};\n_s(useRecipes, \"L4FrCpM06AYz7M9VF/yh18qXcSg=\");","map":{"version":3,"names":["useState","useCallback","recipesAPI","useRecipes","_s","recipes","setRecipes","loading","setLoading","error","setError","fetchRecipes","params","result","getRecipes","success","data","err","getRecipe","id","getRecipeById","Error","addToFavorites","recipeId","console","removeFromFavorites","isFavorite","getFavorites","createRecipe","recipeData","message","updateRecipe","deleteRecipe","getUserRecipes","getCategories","clearError"],"sources":["/Users/bosaad77/ga/porjects/fantastic-broccoli/src/hooks/useRecipes.js"],"sourcesContent":["import { useState, useCallback } from \"react\"\nimport recipesAPI from \"../services/recipesAPI\"\n\nexport const useRecipes = () => {\n  const [recipes, setRecipes] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  // Fetch all recipes from database\n  const fetchRecipes = useCallback(async (params = {}) => {\n    setLoading(true)\n    setError(null)\n\n    try {\n      const result = await recipesAPI.getRecipes(params)\n\n      if (result.success) {\n        setRecipes(result.data)\n      } else {\n        setError(result.error || \"Failed to fetch recipes\")\n        setRecipes([])\n      }\n    } catch (err) {\n      setError(\"Failed to fetch recipes\")\n      setRecipes([])\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  // Get single recipe by ID from database\n  const getRecipe = useCallback(async (id) => {\n    try {\n      const result = await recipesAPI.getRecipeById(id)\n\n      if (result.success) {\n        return result.data\n      } else {\n        throw new Error(result.error || \"Recipe not found\")\n      }\n    } catch (err) {\n      throw new Error(\"Failed to fetch recipe\")\n    }\n  }, [])\n\n  // Add recipe to favorites\n  const addToFavorites = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.addToFavorites(recipeId)\n      return result.success\n    } catch (err) {\n      console.error(\"Error adding to favorites:\", err)\n      return false\n    }\n  }, [])\n\n  // Remove recipe from favorites\n  const removeFromFavorites = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.removeFromFavorites(recipeId)\n      return result.success\n    } catch (err) {\n      console.error(\"Error removing from favorites:\", err)\n      return false\n    }\n  }, [])\n\n  // Check if recipe is in favorites\n  const isFavorite = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.isFavorite(recipeId)\n      return result.success ? result.data.isFavorite : false\n    } catch (err) {\n      console.error(\"Error checking favorite status:\", err)\n      return false\n    }\n  }, [])\n\n  // Get user's favorite recipes\n  const getFavorites = useCallback(async () => {\n    try {\n      const result = await recipesAPI.getFavorites()\n      return result.success ? result.data : []\n    } catch (err) {\n      console.error(\"Error fetching favorites:\", err)\n      return []\n    }\n  }, [])\n\n  // Create a new recipe\n  const createRecipe = useCallback(async (recipeData) => {\n    try {\n      const result = await recipesAPI.createRecipe(recipeData);\n      if (result.success) {\n        // Refresh recipes list if needed\n        await fetchRecipes();\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Error creating recipe:\", err);\n      return { \n        success: false, \n        error: err.message || \"Failed to create recipe\" \n      };\n    }\n  }, [fetchRecipes]);\n\n  // Update an existing recipe\n  const updateRecipe = useCallback(async (recipeId, recipeData) => {\n    try {\n      const result = await recipesAPI.updateRecipe(recipeId, recipeData);\n      if (result.success) {\n        // Refresh recipes list if needed\n        await fetchRecipes();\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Error updating recipe:\", err);\n      return { \n        success: false, \n        error: err.message || \"Failed to update recipe\" \n      };\n    }\n  }, [fetchRecipes]);\n\n  // Delete a recipe\n  const deleteRecipe = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.deleteRecipe(recipeId);\n      if (result.success) {\n        // Refresh recipes list\n        await fetchRecipes();\n      }\n      return result;\n    } catch (err) {\n      console.error(\"Error deleting recipe:\", err);\n      return { \n        success: false, \n        error: err.message || \"Failed to delete recipe\" \n      };\n    }\n  }, [fetchRecipes]);\n\n  // Get user's own recipes\n  const getUserRecipes = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const result = await recipesAPI.getUserRecipes();\n      if (result.success) {\n        return result.data;\n      } else {\n        setError(result.error || \"Failed to fetch your recipes\");\n        return [];\n      }\n    } catch (err) {\n      setError(\"Failed to fetch your recipes\");\n      return [];\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Get all categories\n  const getCategories = useCallback(async () => {\n    try {\n      const result = await recipesAPI.getCategories();\n      return result.success ? result.data : [];\n    } catch (err) {\n      console.error(\"Error fetching categories:\", err);\n      return [];\n    }\n  }, []);\n\n  // Clear error\n  const clearError = useCallback(() => {\n    setError(null)\n  }, [])\n\n  return {\n    recipes,\n    loading,\n    error,\n    fetchRecipes,\n    getRecipe,\n    addToFavorites,\n    removeFromFavorites,\n    isFavorite,\n    getFavorites,\n    createRecipe,\n    updateRecipe,\n    deleteRecipe,\n    getUserRecipes,\n    getCategories,\n    clearError,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}