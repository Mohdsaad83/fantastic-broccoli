{"ast":null,"code":"import _objectSpread from\"/Users/bosaad77/ga/porjects/fantastic-broccoli/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// Create axios instance with proper base URL\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||\"http://localhost:3004\",headers:{\"Content-Type\":\"application/json\"}});export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[isAuthenticated,setIsAuthenticated]=useState(false);// Set up token in axios instance\nuseEffect(()=>{const token=localStorage.getItem(\"token\");if(token){api.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);}},[]);// Check if user is logged in on app start\nuseEffect(()=>{checkAuthStatus();},[]);const checkAuthStatus=async()=>{try{const token=localStorage.getItem(\"token\");if(!token){setLoading(false);return;}const response=await api.get(\"/api/auth/me\");if(response.data.success){setUser(response.data.user);setIsAuthenticated(true);}else{localStorage.removeItem(\"token\");delete api.defaults.headers.common[\"Authorization\"];}}catch(error){console.error(\"Auth check failed:\",error);localStorage.removeItem(\"token\");delete api.defaults.headers.common[\"Authorization\"];}finally{setLoading(false);}};// Login function\nconst login=async(email,password)=>{try{const response=await api.post(\"/api/auth/login\",{email,password});if(response.data.success){const{token,user}=response.data;// Store token in localStorage\nlocalStorage.setItem(\"token\",token);// Set axios default header\napi.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);// Update state\nsetUser(user);setIsAuthenticated(true);return{success:true,user};}else{throw new Error(response.data.message||\"Login failed\");}}catch(error){var _error$response,_error$response$data;console.error(\"Login error:\",error);throw new Error(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||\"Login failed\");}};// Register function\nconst register=async userData=>{try{const response=await api.post(\"/api/auth/register\",userData);if(response.data.success){const{token,user}=response.data;// Store token in localStorage\nlocalStorage.setItem(\"token\",token);// Set axios default header\napi.defaults.headers.common[\"Authorization\"]=\"Bearer \".concat(token);// Update state\nsetUser(user);setIsAuthenticated(true);return{success:true,user};}else{throw new Error(response.data.message||\"Registration failed\");}}catch(error){var _error$response2,_error$response2$data;console.error(\"Registration error:\",error);throw new Error(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||\"Registration failed\");}};// Update user function\nconst updateUser=async userData=>{try{const response=await api.put(\"/api/auth/profile\",userData);if(response.data.success){const updatedUser=response.data.user;// Update state\nsetUser(updatedUser);// Also update localStorage if you store user data there\nconst existingProfile=localStorage.getItem(\"profile_\".concat(user.id));if(existingProfile){const profile=JSON.parse(existingProfile);const updatedProfile=_objectSpread(_objectSpread({},profile),userData);localStorage.setItem(\"profile_\".concat(user.id),JSON.stringify(updatedProfile));}return{success:true,user:updatedUser};}else{throw new Error(response.data.message||\"Update failed\");}}catch(error){var _error$response3,_error$response3$data;console.error(\"Update user error:\",error);throw new Error(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||\"Failed to update profile\");}};// Change password function\nconst changePassword=async(currentPassword,newPassword)=>{try{const response=await api.put(\"/api/auth/change-password\",{currentPassword,newPassword});if(response.data.success){return{success:true,message:\"Password changed successfully\"};}else{throw new Error(response.data.message||\"Password change failed\");}}catch(error){var _error$response4,_error$response4$data;console.error(\"Change password error:\",error);throw new Error(((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.message)||\"Failed to change password\");}};// Delete account function\nconst deleteAccount=async()=>{try{const response=await api.delete(\"/api/auth/account\");if(response.data.success){// Clear all user data\nlocalStorage.removeItem(\"token\");localStorage.removeItem(\"profile_\".concat(user.id));localStorage.removeItem(\"notifications_\".concat(user.id));localStorage.removeItem(\"privacy_\".concat(user.id));delete api.defaults.headers.common[\"Authorization\"];// Update state\nsetUser(null);setIsAuthenticated(false);return{success:true,message:\"Account deleted successfully\"};}else{throw new Error(response.data.message||\"Account deletion failed\");}}catch(error){var _error$response5,_error$response5$data;console.error(\"Delete account error:\",error);throw new Error(((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message)||\"Failed to delete account\");}};// Logout function\nconst logout=async()=>{try{// Call logout endpoint (optional)\nawait api.post(\"/api/auth/logout\",{});}catch(error){console.error(\"Logout endpoint error:\",error);}finally{// Clear local storage and state regardless of API call success\nlocalStorage.removeItem(\"token\");delete api.defaults.headers.common[\"Authorization\"];setUser(null);setIsAuthenticated(false);}};const value={user,loading,isAuthenticated,login,register,updateUser,// Add this\nchangePassword,// Add this\ndeleteAccount,// Add this\nlogout,checkAuthStatus};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export function useAuth(){const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsx","_jsx","AuthContext","api","create","baseURL","process","env","REACT_APP_API_URL","headers","AuthProvider","_ref","children","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","defaults","common","concat","checkAuthStatus","response","get","data","success","removeItem","error","console","login","email","password","post","setItem","Error","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","updateUser","put","updatedUser","existingProfile","id","profile","JSON","parse","updatedProfile","_objectSpread","stringify","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","deleteAccount","delete","_error$response5","_error$response5$data","logout","value","Provider","useAuth","context"],"sources":["/Users/bosaad77/ga/porjects/fantastic-broccoli/src/contexts/Auth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst AuthContext = createContext()\n\n// Create axios instance with proper base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:3004\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  // Set up token in axios instance\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    }\n  }, [])\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus()\n  }, [])\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\")\n      if (!token) {\n        setLoading(false)\n        return\n      }\n\n      const response = await api.get(\"/api/auth/me\")\n\n      if (response.data.success) {\n        setUser(response.data.user)\n        setIsAuthenticated(true)\n      } else {\n        localStorage.removeItem(\"token\")\n        delete api.defaults.headers.common[\"Authorization\"]\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error)\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/api/auth/login\", {\n        email,\n        password,\n      })\n\n      if (response.data.success) {\n        const { token, user } = response.data\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token)\n\n        // Set axios default header\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n        // Update state\n        setUser(user)\n        setIsAuthenticated(true)\n\n        return { success: true, user }\n      } else {\n        throw new Error(response.data.message || \"Login failed\")\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      throw new Error(error.response?.data?.message || \"Login failed\")\n    }\n  }\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await api.post(\"/api/auth/register\", userData)\n\n      if (response.data.success) {\n        const { token, user } = response.data\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token)\n\n        // Set axios default header\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n        // Update state\n        setUser(user)\n        setIsAuthenticated(true)\n\n        return { success: true, user }\n      } else {\n        throw new Error(response.data.message || \"Registration failed\")\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      throw new Error(error.response?.data?.message || \"Registration failed\")\n    }\n  }\n\n  // Update user function\n  const updateUser = async (userData) => {\n    try {\n      const response = await api.put(\"/api/auth/profile\", userData)\n\n      if (response.data.success) {\n        const updatedUser = response.data.user\n\n        // Update state\n        setUser(updatedUser)\n\n        // Also update localStorage if you store user data there\n        const existingProfile = localStorage.getItem(`profile_${user.id}`)\n        if (existingProfile) {\n          const profile = JSON.parse(existingProfile)\n          const updatedProfile = { ...profile, ...userData }\n          localStorage.setItem(\n            `profile_${user.id}`,\n            JSON.stringify(updatedProfile)\n          )\n        }\n\n        return { success: true, user: updatedUser }\n      } else {\n        throw new Error(response.data.message || \"Update failed\")\n      }\n    } catch (error) {\n      console.error(\"Update user error:\", error)\n      throw new Error(\n        error.response?.data?.message || \"Failed to update profile\"\n      )\n    }\n  }\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await api.put(\"/api/auth/change-password\", {\n        currentPassword,\n        newPassword,\n      })\n\n      if (response.data.success) {\n        return { success: true, message: \"Password changed successfully\" }\n      } else {\n        throw new Error(response.data.message || \"Password change failed\")\n      }\n    } catch (error) {\n      console.error(\"Change password error:\", error)\n      throw new Error(\n        error.response?.data?.message || \"Failed to change password\"\n      )\n    }\n  }\n\n  // Delete account function\n  const deleteAccount = async () => {\n    try {\n      const response = await api.delete(\"/api/auth/account\")\n\n      if (response.data.success) {\n        // Clear all user data\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(`profile_${user.id}`)\n        localStorage.removeItem(`notifications_${user.id}`)\n        localStorage.removeItem(`privacy_${user.id}`)\n        delete api.defaults.headers.common[\"Authorization\"]\n\n        // Update state\n        setUser(null)\n        setIsAuthenticated(false)\n\n        return { success: true, message: \"Account deleted successfully\" }\n      } else {\n        throw new Error(response.data.message || \"Account deletion failed\")\n      }\n    } catch (error) {\n      console.error(\"Delete account error:\", error)\n      throw new Error(\n        error.response?.data?.message || \"Failed to delete account\"\n      )\n    }\n  }\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await api.post(\"/api/auth/logout\", {})\n    } catch (error) {\n      console.error(\"Logout endpoint error:\", error)\n    } finally {\n      // Clear local storage and state regardless of API call success\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n      setUser(null)\n      setIsAuthenticated(false)\n    }\n  }\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    updateUser, // Add this\n    changePassword, // Add this\n    deleteAccount, // Add this\n    logout,\n    checkAuthStatus,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}