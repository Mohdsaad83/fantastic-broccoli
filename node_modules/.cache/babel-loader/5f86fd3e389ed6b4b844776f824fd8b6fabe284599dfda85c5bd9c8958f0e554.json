{"ast":null,"code":"var _jsxFileName = \"/Users/bosaad77/ga/porjects/fantastic-broccoli/src/contexts/Auth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Create axios instance with proper base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:3004\",\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Set up token in axios instance\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n    }\n  }, []);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      const response = await api.get(\"/api/auth/me\");\n      if (response.data.success) {\n        setUser(response.data.user);\n        setIsAuthenticated(true);\n      } else {\n        localStorage.removeItem(\"token\");\n        delete api.defaults.headers.common[\"Authorization\"];\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error);\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/api/auth/login\", {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // Set axios default header\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n        // Update state\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || \"Login failed\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\");\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await api.post(\"/api/auth/register\", userData);\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token);\n\n        // Set axios default header\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n\n        // Update state\n        setUser(user);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        throw new Error(response.data.message || \"Registration failed\");\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\");\n    }\n  };\n\n  // Update user function\n  const updateUser = async userData => {\n    try {\n      const response = await api.put(\"/api/auth/profile\", userData);\n      if (response.data.success) {\n        const updatedUser = response.data.user;\n\n        // Update state\n        setUser(updatedUser);\n\n        // Also update localStorage if you store user data there\n        const existingProfile = localStorage.getItem(`profile_${user.id}`);\n        if (existingProfile) {\n          const profile = JSON.parse(existingProfile);\n          const updatedProfile = {\n            ...profile,\n            ...userData\n          };\n          localStorage.setItem(`profile_${user.id}`, JSON.stringify(updatedProfile));\n        }\n        return {\n          success: true,\n          user: updatedUser\n        };\n      } else {\n        throw new Error(response.data.message || \"Update failed\");\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error(\"Update user error:\", error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to update profile\");\n    }\n  };\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await api.put(\"/api/auth/change-password\", {\n        currentPassword,\n        newPassword\n      });\n      if (response.data.success) {\n        return {\n          success: true,\n          message: \"Password changed successfully\"\n        };\n      } else {\n        throw new Error(response.data.message || \"Password change failed\");\n      }\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Change password error:\", error);\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || \"Failed to change password\");\n    }\n  };\n\n  // Delete account function\n  const deleteAccount = async () => {\n    try {\n      const response = await api.delete(\"/api/auth/account\");\n      if (response.data.success) {\n        // Clear all user data\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(`profile_${user.id}`);\n        localStorage.removeItem(`notifications_${user.id}`);\n        localStorage.removeItem(`privacy_${user.id}`);\n        delete api.defaults.headers.common[\"Authorization\"];\n\n        // Update state\n        setUser(null);\n        setIsAuthenticated(false);\n        return {\n          success: true,\n          message: \"Account deleted successfully\"\n        };\n      } else {\n        throw new Error(response.data.message || \"Account deletion failed\");\n      }\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"Delete account error:\", error);\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || \"Failed to delete account\");\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await api.post(\"/api/auth/logout\", {});\n    } catch (error) {\n      console.error(\"Logout endpoint error:\", error);\n    } finally {\n      // Clear local storage and state regardless of API call success\n      localStorage.removeItem(\"token\");\n      delete api.defaults.headers.common[\"Authorization\"];\n      setUser(null);\n      setIsAuthenticated(false);\n    }\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    updateUser,\n    // Add this\n    changePassword,\n    // Add this\n    deleteAccount,\n    // Add this\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"IZja/rYxMfdrDJzYcGoGecx9cBo=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","api","create","baseURL","process","env","REACT_APP_API_URL","headers","AuthProvider","children","_s","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","defaults","common","checkAuthStatus","response","get","data","success","removeItem","error","console","login","email","password","post","setItem","Error","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","updateUser","put","updatedUser","existingProfile","id","profile","JSON","parse","updatedProfile","stringify","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","deleteAccount","delete","_error$response5","_error$response5$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/bosaad77/ga/porjects/fantastic-broccoli/src/contexts/Auth.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst AuthContext = createContext()\n\n// Create axios instance with proper base URL\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || \"http://localhost:3004\",\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  // Set up token in axios instance\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n    }\n  }, [])\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    checkAuthStatus()\n  }, [])\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem(\"token\")\n      if (!token) {\n        setLoading(false)\n        return\n      }\n\n      const response = await api.get(\"/api/auth/me\")\n\n      if (response.data.success) {\n        setUser(response.data.user)\n        setIsAuthenticated(true)\n      } else {\n        localStorage.removeItem(\"token\")\n        delete api.defaults.headers.common[\"Authorization\"]\n      }\n    } catch (error) {\n      console.error(\"Auth check failed:\", error)\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await api.post(\"/api/auth/login\", {\n        email,\n        password,\n      })\n\n      if (response.data.success) {\n        const { token, user } = response.data\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token)\n\n        // Set axios default header\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n        // Update state\n        setUser(user)\n        setIsAuthenticated(true)\n\n        return { success: true, user }\n      } else {\n        throw new Error(response.data.message || \"Login failed\")\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      throw new Error(error.response?.data?.message || \"Login failed\")\n    }\n  }\n\n  // Register function\n  const register = async (userData) => {\n    try {\n      const response = await api.post(\"/api/auth/register\", userData)\n\n      if (response.data.success) {\n        const { token, user } = response.data\n\n        // Store token in localStorage\n        localStorage.setItem(\"token\", token)\n\n        // Set axios default header\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n\n        // Update state\n        setUser(user)\n        setIsAuthenticated(true)\n\n        return { success: true, user }\n      } else {\n        throw new Error(response.data.message || \"Registration failed\")\n      }\n    } catch (error) {\n      console.error(\"Registration error:\", error)\n      throw new Error(error.response?.data?.message || \"Registration failed\")\n    }\n  }\n\n  // Update user function\n  const updateUser = async (userData) => {\n    try {\n      const response = await api.put(\"/api/auth/profile\", userData)\n\n      if (response.data.success) {\n        const updatedUser = response.data.user\n\n        // Update state\n        setUser(updatedUser)\n\n        // Also update localStorage if you store user data there\n        const existingProfile = localStorage.getItem(`profile_${user.id}`)\n        if (existingProfile) {\n          const profile = JSON.parse(existingProfile)\n          const updatedProfile = { ...profile, ...userData }\n          localStorage.setItem(`profile_${user.id}`, JSON.stringify(updatedProfile))\n        }\n\n        return { success: true, user: updatedUser }\n      } else {\n        throw new Error(response.data.message || \"Update failed\")\n      }\n    } catch (error) {\n      console.error(\"Update user error:\", error)\n      throw new Error(error.response?.data?.message || \"Failed to update profile\")\n    }\n  }\n\n  // Change password function\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      const response = await api.put(\"/api/auth/change-password\", {\n        currentPassword,\n        newPassword,\n      })\n\n      if (response.data.success) {\n        return { success: true, message: \"Password changed successfully\" }\n      } else {\n        throw new Error(response.data.message || \"Password change failed\")\n      }\n    } catch (error) {\n      console.error(\"Change password error:\", error)\n      throw new Error(error.response?.data?.message || \"Failed to change password\")\n    }\n  }\n\n  // Delete account function\n  const deleteAccount = async () => {\n    try {\n      const response = await api.delete(\"/api/auth/account\")\n\n      if (response.data.success) {\n        // Clear all user data\n        localStorage.removeItem(\"token\")\n        localStorage.removeItem(`profile_${user.id}`)\n        localStorage.removeItem(`notifications_${user.id}`)\n        localStorage.removeItem(`privacy_${user.id}`)\n        delete api.defaults.headers.common[\"Authorization\"]\n\n        // Update state\n        setUser(null)\n        setIsAuthenticated(false)\n\n        return { success: true, message: \"Account deleted successfully\" }\n      } else {\n        throw new Error(response.data.message || \"Account deletion failed\")\n      }\n    } catch (error) {\n      console.error(\"Delete account error:\", error)\n      throw new Error(error.response?.data?.message || \"Failed to delete account\")\n    }\n  }\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout endpoint (optional)\n      await api.post(\"/api/auth/logout\", {})\n    } catch (error) {\n      console.error(\"Logout endpoint error:\", error)\n    } finally {\n      // Clear local storage and state regardless of API call success\n      localStorage.removeItem(\"token\")\n      delete api.defaults.headers.common[\"Authorization\"]\n      setUser(null)\n      setIsAuthenticated(false)\n    }\n  }\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    updateUser, // Add this\n    changePassword, // Add this\n    deleteAccount, // Add this\n    logout,\n    checkAuthStatus,\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}