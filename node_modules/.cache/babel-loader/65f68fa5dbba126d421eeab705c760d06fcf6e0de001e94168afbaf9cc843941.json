{"ast":null,"code":"import{useState,useCallback}from\"react\";import recipesAPI from\"../services/recipesAPI\";export const useRecipes=()=>{const[recipes,setRecipes]=useState([]);const[loading,setLoading]=useState(false);const[error,setError]=useState(null);// Fetch all recipes from database\nconst fetchRecipes=useCallback(async function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};setLoading(true);setError(null);try{const result=await recipesAPI.getRecipes(params);if(result.success){setRecipes(result.data);}else{setError(result.error||\"Failed to fetch recipes\");setRecipes([]);}}catch(err){setError(\"Failed to fetch recipes\");setRecipes([]);}finally{setLoading(false);}},[]);// Get single recipe by ID from database\nconst getRecipe=useCallback(async id=>{try{const result=await recipesAPI.getRecipeById(id);if(result.success){return result.data;}else{throw new Error(result.error||\"Recipe not found\");}}catch(err){throw new Error(\"Failed to fetch recipe\");}},[]);// Add recipe to favorites\nconst addToFavorites=useCallback(async recipeId=>{try{const result=await recipesAPI.addToFavorites(recipeId);return result.success;}catch(err){console.error(\"Error adding to favorites:\",err);return false;}},[]);// Remove recipe from favorites\nconst removeFromFavorites=useCallback(async recipeId=>{try{const result=await recipesAPI.removeFromFavorites(recipeId);return result.success;}catch(err){console.error(\"Error removing from favorites:\",err);return false;}},[]);// Check if recipe is in favorites\nconst isFavorite=useCallback(async recipeId=>{try{const result=await recipesAPI.isFavorite(recipeId);return result.success?result.data.isFavorite:false;}catch(err){console.error(\"Error checking favorite status:\",err);return false;}},[]);// Get user's favorite recipes\nconst getFavorites=useCallback(async()=>{try{const result=await recipesAPI.getFavorites();return result.success?result.data:[];}catch(err){console.error(\"Error fetching favorites:\",err);return[];}},[]);// Clear error\nconst clearError=useCallback(()=>{setError(null);},[]);return{recipes,loading,error,fetchRecipes,getRecipe,addToFavorites,removeFromFavorites,isFavorite,getFavorites,clearError};};","map":{"version":3,"names":["useState","useCallback","recipesAPI","useRecipes","recipes","setRecipes","loading","setLoading","error","setError","fetchRecipes","params","arguments","length","undefined","result","getRecipes","success","data","err","getRecipe","id","getRecipeById","Error","addToFavorites","recipeId","console","removeFromFavorites","isFavorite","getFavorites","clearError"],"sources":["/Users/bosaad77/ga/porjects/fantastic-broccoli/src/hooks/useRecipes.js"],"sourcesContent":["import { useState, useCallback } from \"react\"\nimport recipesAPI from \"../services/recipesAPI\"\n\nexport const useRecipes = () => {\n  const [recipes, setRecipes] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  // Fetch all recipes from database\n  const fetchRecipes = useCallback(async (params = {}) => {\n    setLoading(true)\n    setError(null)\n\n    try {\n      const result = await recipesAPI.getRecipes(params)\n      \n      if (result.success) {\n        setRecipes(result.data)\n      } else {\n        setError(result.error || \"Failed to fetch recipes\")\n        setRecipes([])\n      }\n    } catch (err) {\n      setError(\"Failed to fetch recipes\")\n      setRecipes([])\n    } finally {\n      setLoading(false)\n    }\n  }, [])\n\n  // Get single recipe by ID from database\n  const getRecipe = useCallback(async (id) => {\n    try {\n      const result = await recipesAPI.getRecipeById(id)\n      \n      if (result.success) {\n        return result.data\n      } else {\n        throw new Error(result.error || \"Recipe not found\")\n      }\n    } catch (err) {\n      throw new Error(\"Failed to fetch recipe\")\n    }\n  }, [])\n\n  // Add recipe to favorites\n  const addToFavorites = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.addToFavorites(recipeId)\n      return result.success\n    } catch (err) {\n      console.error(\"Error adding to favorites:\", err)\n      return false\n    }\n  }, [])\n\n  // Remove recipe from favorites\n  const removeFromFavorites = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.removeFromFavorites(recipeId)\n      return result.success\n    } catch (err) {\n      console.error(\"Error removing from favorites:\", err)\n      return false\n    }\n  }, [])\n\n  // Check if recipe is in favorites\n  const isFavorite = useCallback(async (recipeId) => {\n    try {\n      const result = await recipesAPI.isFavorite(recipeId)\n      return result.success ? result.data.isFavorite : false\n    } catch (err) {\n      console.error(\"Error checking favorite status:\", err)\n      return false\n    }\n  }, [])\n\n  // Get user's favorite recipes\n  const getFavorites = useCallback(async () => {\n    try {\n      const result = await recipesAPI.getFavorites()\n      return result.success ? result.data : []\n    } catch (err) {\n      console.error(\"Error fetching favorites:\", err)\n      return []\n    }\n  }, [])\n\n  // Clear error\n  const clearError = useCallback(() => {\n    setError(null)\n  }, [])\n\n  return {\n    recipes,\n    loading,\n    error,\n    fetchRecipes,\n    getRecipe,\n    addToFavorites,\n    removeFromFavorites,\n    isFavorite,\n    getFavorites,\n    clearError,\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}