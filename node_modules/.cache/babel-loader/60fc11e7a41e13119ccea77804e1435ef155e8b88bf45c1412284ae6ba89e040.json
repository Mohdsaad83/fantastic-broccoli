{"ast":null,"code":"var _jsxFileName = \"/Users/bosaad77/ga/porjects/fantastic-broccoli/src/pages/MealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FiPlus, FiTrash2, FiCalendar, FiClock, FiUsers } from \"react-icons/fi\";\nimport recipesAPI from \"../services/recipesAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealPlanner = () => {\n  _s();\n  const [selectedWeek, setSelectedWeek] = useState(new Date());\n  const [mealPlan, setMealPlan] = useState({});\n  const [availableRecipes, setAvailableRecipes] = useState([]);\n  const [showRecipeModal, setShowRecipeModal] = useState(false);\n  const [selectedSlot, setSelectedSlot] = useState({\n    day: \"\",\n    mealType: \"\"\n  });\n  const daysOfWeek = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  const mealTypes = [\"breakfast\", \"lunch\", \"dinner\", \"snack\"];\n  useEffect(() => {\n    // Fetch real recipes from API\n    const fetchRecipes = async () => {\n      try {\n        const response = await recipesAPI.getRecipes();\n        const recipes = response.data || [];\n        // Transform recipes to match the expected format for meal planning\n        const transformedRecipes = recipes.map(recipe => {\n          var _recipe$nutrition;\n          return {\n            id: recipe._id,\n            title: recipe.title,\n            calories: ((_recipe$nutrition = recipe.nutrition) === null || _recipe$nutrition === void 0 ? void 0 : _recipe$nutrition.calories) || 0,\n            cookingTime: (recipe.prepTime || 0) + (recipe.cookTime || 0),\n            servings: recipe.servings || 1,\n            imageUrl: recipe.image || recipe.imageUrl || \"/recipe-images/default.jpg\"\n          };\n        });\n        setAvailableRecipes(transformedRecipes);\n      } catch (error) {\n        console.error(\"Failed to fetch recipes:\", error);\n        // Keep empty array if fetch fails\n        setAvailableRecipes([]);\n      }\n    };\n    fetchRecipes();\n\n    // Load saved meal plan from localStorage\n    const savedMealPlan = localStorage.getItem(\"mealPlan\");\n    if (savedMealPlan) {\n      setMealPlan(JSON.parse(savedMealPlan));\n    }\n  }, []);\n\n  // DEBUG: Log slot and modal state\n  useEffect(() => {\n    // Log when modal opens and slot changes\n    if (showRecipeModal) {}\n  }, [showRecipeModal, selectedSlot]);\n  const getWeekDates = startDate => {\n    const week = [];\n    const start = new Date(startDate);\n    start.setDate(start.getDate() - start.getDay() + 1); // Start from Monday\n\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(start);\n      date.setDate(start.getDate() + i);\n      week.push(date);\n    }\n    return week;\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString(\"en-US\", {\n      month: \"short\",\n      day: \"numeric\"\n    });\n  };\n  const openRecipeModal = (day, mealType) => {\n    setSelectedSlot({\n      day,\n      mealType\n    });\n    setShowRecipeModal(true);\n  };\n  const addRecipeToMealPlan = recipe => {\n    if (!selectedSlot.day || !selectedSlot.mealType) {\n      console.error(\"Missing slot information:\", selectedSlot);\n      alert(\"Please select a meal slot.\");\n      return;\n    }\n    const key = `${selectedSlot.day}-${selectedSlot.mealType}`;\n    const newMealPlan = {\n      ...mealPlan,\n      [key]: recipe\n    };\n    setMealPlan(newMealPlan);\n    localStorage.setItem(\"mealPlan\", JSON.stringify(newMealPlan));\n    setShowRecipeModal(false);\n    setSelectedSlot({\n      day: \"\",\n      mealType: \"\"\n    }); // Reset slot after adding\n  };\n  const removeRecipeFromMealPlan = (day, mealType) => {\n    const key = `${day}-${mealType}`;\n    const newMealPlan = {\n      ...mealPlan\n    };\n    delete newMealPlan[key];\n    setMealPlan(newMealPlan);\n    localStorage.setItem(\"mealPlan\", JSON.stringify(newMealPlan));\n  };\n  const getTotalCalories = day => {\n    let total = 0;\n    mealTypes.forEach(mealType => {\n      const key = `${day}-${mealType}`;\n      const recipe = mealPlan[key];\n      if (recipe) {\n        total += recipe.calories;\n      }\n    });\n    return total;\n  };\n  const getWeeklyTotalCalories = () => {\n    let total = 0;\n    daysOfWeek.forEach(day => {\n      total += getTotalCalories(day);\n    });\n    return total;\n  };\n  const weekDates = getWeekDates(selectedWeek);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"meal-planner\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Meal Planner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Plan your weekly meals and stay on track with your healthy eating goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const prevWeek = new Date(selectedWeek);\n            prevWeek.setDate(prevWeek.getDate() - 7);\n            setSelectedWeek(prevWeek);\n          },\n          className: \"week-nav-btn\",\n          children: \"\\u2190 Previous Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"week-info\",\n          children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Week of \", formatDate(weekDates[0]), \" - \", formatDate(weekDates[6])]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const nextWeek = new Date(selectedWeek);\n            nextWeek.setDate(nextWeek.getDate() + 7);\n            setSelectedWeek(nextWeek);\n          },\n          className: \"week-nav-btn\",\n          children: \"Next Week \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekly-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: getWeeklyTotalCalories()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Weekly Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: Math.round(getWeeklyTotalCalories() / 7)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Daily Average\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-value\",\n            children: Object.keys(mealPlan).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-label\",\n            children: \"Planned Meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-plan-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-grid-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), mealTypes.map(mealType => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"meal-header\",\n            children: mealType.charAt(0).toUpperCase() + mealType.slice(1)\n          }, mealType, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-header\",\n            children: \"Daily Total\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), daysOfWeek.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meal-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-cell\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-name\",\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-date\",\n              children: formatDate(weekDates[dayIndex])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), mealTypes.map(mealType => {\n            const key = `${day}-${mealType}`;\n            const recipe = mealPlan[key];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-cell\",\n              children: recipe ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meal-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meal-recipe\",\n                  children: [recipe.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: recipe.imageUrl,\n                    alt: recipe.title,\n                    className: \"recipe-img\",\n                    style: {\n                      width: \"40px\",\n                      height: \"40px\",\n                      borderRadius: \"50%\",\n                      marginRight: \"0.5rem\",\n                      objectFit: \"cover\",\n                      backgroundColor: \"#f0f0f0\"\n                    },\n                    onError: e => {\n                      e.target.style.display = \"none\";\n                    },\n                    onLoad: () => {\n                      // Image loaded successfully\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      width: \"40px\",\n                      height: \"40px\",\n                      borderRadius: \"50%\",\n                      marginRight: \"0.5rem\",\n                      backgroundColor: \"#e5e7eb\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      fontSize: \"12px\",\n                      color: \"#6b7280\"\n                    },\n                    children: \"IMG\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"recipe-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: recipe.title\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"recipe-meta\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [recipe.calories, \" cal\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 266,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 268,\n                          columnNumber: 33\n                        }, this), \" \", recipe.cookingTime, \"min\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 265,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeRecipeFromMealPlan(day, mealType),\n                  className: \"remove-recipe-btn\",\n                  children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openRecipeModal(day, mealType),\n                className: \"add-meal-btn\",\n                children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Add \", mealType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 23\n              }, this)\n            }, mealType, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"daily-total\",\n              children: [getTotalCalories(day), \" cal\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), showRecipeModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => {\n          setShowRecipeModal(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          onClick: e => e.stopPropagation(),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Choose a recipe for \", selectedSlot.day, \" \", selectedSlot.mealType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                setShowRecipeModal(false);\n              },\n              className: \"modal-close\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipes-list\",\n            children: availableRecipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: e => {\n                e.preventDefault();\n                e.stopPropagation();\n                addRecipeToMealPlan(recipe);\n              },\n              className: \"recipe-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-image\",\n                children: recipe.imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: recipe.imageUrl,\n                  alt: recipe.title,\n                  className: \"recipe-img\",\n                  style: {\n                    width: \"100%\",\n                    height: \"200px\",\n                    objectFit: \"cover\",\n                    backgroundColor: \"#f0f0f0\"\n                  },\n                  onError: e => {\n                    e.target.style.display = \"none\";\n                  },\n                  onLoad: () => {\n                    // Modal image loaded successfully\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    width: \"100%\",\n                    height: \"200px\",\n                    backgroundColor: \"#e5e7eb\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    fontSize: \"16px\",\n                    color: \"#6b7280\"\n                  },\n                  children: \"No Image Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: recipe.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recipe-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [recipe.calories, \" cal\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 377,\n                      columnNumber: 27\n                    }, this), \" \", recipe.cookingTime, \"min\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [/*#__PURE__*/_jsxDEV(FiUsers, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 27\n                    }, this), \" \", recipe.servings, \" servings\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this)]\n            }, recipe.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(MealPlanner, \"+DeVLwB6Bv86pKPIA7jnIMHSTgc=\");\n_c = MealPlanner;\nexport default MealPlanner;\nvar _c;\n$RefreshReg$(_c, \"MealPlanner\");","map":{"version":3,"names":["React","useState","useEffect","FiPlus","FiTrash2","FiCalendar","FiClock","FiUsers","recipesAPI","jsxDEV","_jsxDEV","MealPlanner","_s","selectedWeek","setSelectedWeek","Date","mealPlan","setMealPlan","availableRecipes","setAvailableRecipes","showRecipeModal","setShowRecipeModal","selectedSlot","setSelectedSlot","day","mealType","daysOfWeek","mealTypes","fetchRecipes","response","getRecipes","recipes","data","transformedRecipes","map","recipe","_recipe$nutrition","id","_id","title","calories","nutrition","cookingTime","prepTime","cookTime","servings","imageUrl","image","error","console","savedMealPlan","localStorage","getItem","JSON","parse","getWeekDates","startDate","week","start","setDate","getDate","getDay","i","date","push","formatDate","toLocaleDateString","month","openRecipeModal","addRecipeToMealPlan","alert","key","newMealPlan","setItem","stringify","removeRecipeFromMealPlan","getTotalCalories","total","forEach","getWeeklyTotalCalories","weekDates","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prevWeek","nextWeek","Math","round","Object","keys","length","charAt","toUpperCase","slice","dayIndex","src","alt","style","width","height","borderRadius","marginRight","objectFit","backgroundColor","onError","e","target","display","onLoad","alignItems","justifyContent","fontSize","color","stopPropagation","preventDefault","_c","$RefreshReg$"],"sources":["/Users/bosaad77/ga/porjects/fantastic-broccoli/src/pages/MealPlanner.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { FiPlus, FiTrash2, FiCalendar, FiClock, FiUsers } from \"react-icons/fi\"\nimport recipesAPI from \"../services/recipesAPI\"\n\nconst MealPlanner = () => {\n  const [selectedWeek, setSelectedWeek] = useState(new Date())\n  const [mealPlan, setMealPlan] = useState({})\n  const [availableRecipes, setAvailableRecipes] = useState([])\n  const [showRecipeModal, setShowRecipeModal] = useState(false)\n  const [selectedSlot, setSelectedSlot] = useState({ day: \"\", mealType: \"\" })\n\n  const daysOfWeek = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ]\n  const mealTypes = [\"breakfast\", \"lunch\", \"dinner\", \"snack\"]\n\n  useEffect(() => {\n    // Fetch real recipes from API\n    const fetchRecipes = async () => {\n      try {\n        const response = await recipesAPI.getRecipes()\n        const recipes = response.data || []\n        // Transform recipes to match the expected format for meal planning\n        const transformedRecipes = recipes.map(recipe => ({\n          id: recipe._id,\n          title: recipe.title,\n          calories: recipe.nutrition?.calories || 0,\n          cookingTime: (recipe.prepTime || 0) + (recipe.cookTime || 0),\n          servings: recipe.servings || 1,\n          imageUrl: recipe.image || recipe.imageUrl || \"/recipe-images/default.jpg\"\n        }))\n        setAvailableRecipes(transformedRecipes)\n      } catch (error) {\n        console.error(\"Failed to fetch recipes:\", error)\n        // Keep empty array if fetch fails\n        setAvailableRecipes([])\n      }\n    }\n\n    fetchRecipes()\n    \n    // Load saved meal plan from localStorage\n    const savedMealPlan = localStorage.getItem(\"mealPlan\")\n    if (savedMealPlan) {\n      setMealPlan(JSON.parse(savedMealPlan))\n    }\n  }, [])\n\n  // DEBUG: Log slot and modal state\n  useEffect(() => {\n    // Log when modal opens and slot changes\n    if (showRecipeModal) {\n    }\n  }, [showRecipeModal, selectedSlot])\n\n  const getWeekDates = (startDate) => {\n    const week = []\n    const start = new Date(startDate)\n    start.setDate(start.getDate() - start.getDay() + 1) // Start from Monday\n\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(start)\n      date.setDate(start.getDate() + i)\n      week.push(date)\n    }\n    return week\n  }\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString(\"en-US\", { month: \"short\", day: \"numeric\" })\n  }\n\n  const openRecipeModal = (day, mealType) => {\n    setSelectedSlot({ day, mealType })\n    setShowRecipeModal(true)\n  }\n\n  const addRecipeToMealPlan = (recipe) => {\n    if (!selectedSlot.day || !selectedSlot.mealType) {\n      console.error(\"Missing slot information:\", selectedSlot)\n      alert(\"Please select a meal slot.\")\n      return\n    }\n\n    const key = `${selectedSlot.day}-${selectedSlot.mealType}`\n\n    const newMealPlan = {\n      ...mealPlan,\n      [key]: recipe,\n    }\n\n    setMealPlan(newMealPlan)\n    localStorage.setItem(\"mealPlan\", JSON.stringify(newMealPlan))\n    setShowRecipeModal(false)\n    setSelectedSlot({ day: \"\", mealType: \"\" }) // Reset slot after adding\n  }\n\n  const removeRecipeFromMealPlan = (day, mealType) => {\n    const key = `${day}-${mealType}`\n    const newMealPlan = { ...mealPlan }\n    delete newMealPlan[key]\n    setMealPlan(newMealPlan)\n    localStorage.setItem(\"mealPlan\", JSON.stringify(newMealPlan))\n  }\n\n  const getTotalCalories = (day) => {\n    let total = 0\n    mealTypes.forEach((mealType) => {\n      const key = `${day}-${mealType}`\n      const recipe = mealPlan[key]\n      if (recipe) {\n        total += recipe.calories\n      }\n    })\n    return total\n  }\n\n  const getWeeklyTotalCalories = () => {\n    let total = 0\n    daysOfWeek.forEach((day) => {\n      total += getTotalCalories(day)\n    })\n    return total\n  }\n\n  const weekDates = getWeekDates(selectedWeek)\n\n  return (\n    <div className=\"meal-planner\">\n      <div className=\"container\">\n        <div className=\"page-header\">\n          <h1>Meal Planner</h1>\n          <p>\n            Plan your weekly meals and stay on track with your healthy eating\n            goals\n          </p>\n        </div>\n\n        {/* Week Navigation */}\n        <div className=\"week-navigation\">\n          <button\n            onClick={() => {\n              const prevWeek = new Date(selectedWeek)\n              prevWeek.setDate(prevWeek.getDate() - 7)\n              setSelectedWeek(prevWeek)\n            }}\n            className=\"week-nav-btn\"\n          >\n            ← Previous Week\n          </button>\n\n          <div className=\"week-info\">\n            <FiCalendar />\n            <span>\n              Week of {formatDate(weekDates[0])} - {formatDate(weekDates[6])}\n            </span>\n          </div>\n\n          <button\n            onClick={() => {\n              const nextWeek = new Date(selectedWeek)\n              nextWeek.setDate(nextWeek.getDate() + 7)\n              setSelectedWeek(nextWeek)\n            }}\n            className=\"week-nav-btn\"\n          >\n            Next Week →\n          </button>\n        </div>\n\n        {/* Weekly Stats */}\n        <div className=\"weekly-stats\">\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">{getWeeklyTotalCalories()}</div>\n            <div className=\"stat-label\">Weekly Calories</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">\n              {Math.round(getWeeklyTotalCalories() / 7)}\n            </div>\n            <div className=\"stat-label\">Daily Average</div>\n          </div>\n          <div className=\"stat-card\">\n            <div className=\"stat-value\">{Object.keys(mealPlan).length}</div>\n            <div className=\"stat-label\">Planned Meals</div>\n          </div>\n        </div>\n\n        {/* Meal Plan Grid */}\n        <div className=\"meal-plan-grid\">\n          <div className=\"meal-grid-header\">\n            <div className=\"day-header\">Day</div>\n            {mealTypes.map((mealType) => (\n              <div key={mealType} className=\"meal-header\">\n                {mealType.charAt(0).toUpperCase() + mealType.slice(1)}\n              </div>\n            ))}\n            <div className=\"total-header\">Daily Total</div>\n          </div>\n\n          {daysOfWeek.map((day, dayIndex) => (\n            <div key={day} className=\"meal-row\">\n              <div className=\"day-cell\">\n                <div className=\"day-name\">{day}</div>\n                <div className=\"day-date\">\n                  {formatDate(weekDates[dayIndex])}\n                </div>\n              </div>\n\n              {mealTypes.map((mealType) => {\n                const key = `${day}-${mealType}`\n                const recipe = mealPlan[key]\n\n                return (\n                  <div key={mealType} className=\"meal-cell\">\n                    {recipe ? (\n                      <div className=\"meal-item\">\n                        <div className=\"meal-recipe\">\n                          {recipe.imageUrl ? (\n                            <img\n                              src={recipe.imageUrl}\n                              alt={recipe.title}\n                              className=\"recipe-img\"\n                              style={{\n                                width: \"40px\",\n                                height: \"40px\",\n                                borderRadius: \"50%\",\n                                marginRight: \"0.5rem\",\n                                objectFit: \"cover\",\n                                backgroundColor: \"#f0f0f0\",\n                              }}\n                              onError={(e) => {\n                                e.target.style.display = \"none\"\n                              }}\n                              onLoad={() => {\n                                // Image loaded successfully\n                              }}\n                            />\n                          ) : (\n                            <div\n                              style={{\n                                width: \"40px\",\n                                height: \"40px\",\n                                borderRadius: \"50%\",\n                                marginRight: \"0.5rem\",\n                                backgroundColor: \"#e5e7eb\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                fontSize: \"12px\",\n                                color: \"#6b7280\",\n                              }}\n                            >\n                              IMG\n                            </div>\n                          )}\n                          <div className=\"recipe-info\">\n                            <h4>{recipe.title}</h4>\n                            <div className=\"recipe-meta\">\n                              <span>{recipe.calories} cal</span>\n                              <span>\n                                <FiClock /> {recipe.cookingTime}min\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <button\n                          onClick={() =>\n                            removeRecipeFromMealPlan(day, mealType)\n                          }\n                          className=\"remove-recipe-btn\"\n                        >\n                          <FiTrash2 />\n                        </button>\n                      </div>\n                    ) : (\n                      <button\n                        onClick={() => openRecipeModal(day, mealType)}\n                        className=\"add-meal-btn\"\n                      >\n                        <FiPlus />\n                        <span>Add {mealType}</span>\n                      </button>\n                    )}\n                  </div>\n                )\n              })}\n\n              <div className=\"total-cell\">\n                <div className=\"daily-total\">{getTotalCalories(day)} cal</div>\n              </div>\n            </div>\n          ))}\n        </div>\n\n        {/* Recipe Selection Modal */}\n        {showRecipeModal && (\n          <div\n            className=\"modal-overlay\"\n            onClick={() => {\n              setShowRecipeModal(false)\n            }}\n          >\n            <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n              <div className=\"modal-header\">\n                <h3>\n                  Choose a recipe for {selectedSlot.day} {selectedSlot.mealType}\n                </h3>\n                <button\n                  onClick={() => {\n                    setShowRecipeModal(false)\n                  }}\n                  className=\"modal-close\"\n                >\n                  ×\n                </button>\n              </div>\n\n              <div className=\"recipes-list\">\n                {availableRecipes.map((recipe) => (\n                  <div\n                    key={recipe.id}\n                    onClick={(e) => {\n                      e.preventDefault()\n                      e.stopPropagation()\n                      addRecipeToMealPlan(recipe)\n                    }}\n                    className=\"recipe-option\"\n                  >\n                    <div className=\"recipe-image\">\n                      {recipe.imageUrl ? (\n                        <img\n                          src={recipe.imageUrl}\n                          alt={recipe.title}\n                          className=\"recipe-img\"\n                          style={{\n                            width: \"100%\",\n                            height: \"200px\",\n                            objectFit: \"cover\",\n                            backgroundColor: \"#f0f0f0\",\n                          }}\n                          onError={(e) => {\n                            e.target.style.display = \"none\"\n                          }}\n                          onLoad={() => {\n                            // Modal image loaded successfully\n                          }}\n                        />\n                      ) : (\n                        <div\n                          style={{\n                            width: \"100%\",\n                            height: \"200px\",\n                            backgroundColor: \"#e5e7eb\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                            fontSize: \"16px\",\n                            color: \"#6b7280\",\n                          }}\n                        >\n                          No Image Available\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"recipe-details\">\n                      <h4>{recipe.title}</h4>\n                      <div className=\"recipe-meta\">\n                        <span>{recipe.calories} cal</span>\n                        <span>\n                          <FiClock /> {recipe.cookingTime}min\n                        </span>\n                        <span>\n                          <FiUsers /> {recipe.servings} servings\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MealPlanner\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,OAAO,EAAEC,OAAO,QAAQ,gBAAgB;AAC/E,OAAOC,UAAU,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAIc,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAAEuB,GAAG,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAE3E,MAAMC,UAAU,GAAG,CACjB,QAAQ,EACR,SAAS,EACT,WAAW,EACX,UAAU,EACV,QAAQ,EACR,UAAU,EACV,QAAQ,CACT;EACD,MAAMC,SAAS,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,CAAC;EAE3DzB,SAAS,CAAC,MAAM;IACd;IACA,MAAM0B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrB,UAAU,CAACsB,UAAU,CAAC,CAAC;QAC9C,MAAMC,OAAO,GAAGF,QAAQ,CAACG,IAAI,IAAI,EAAE;QACnC;QACA,MAAMC,kBAAkB,GAAGF,OAAO,CAACG,GAAG,CAACC,MAAM;UAAA,IAAAC,iBAAA;UAAA,OAAK;YAChDC,EAAE,EAAEF,MAAM,CAACG,GAAG;YACdC,KAAK,EAAEJ,MAAM,CAACI,KAAK;YACnBC,QAAQ,EAAE,EAAAJ,iBAAA,GAAAD,MAAM,CAACM,SAAS,cAAAL,iBAAA,uBAAhBA,iBAAA,CAAkBI,QAAQ,KAAI,CAAC;YACzCE,WAAW,EAAE,CAACP,MAAM,CAACQ,QAAQ,IAAI,CAAC,KAAKR,MAAM,CAACS,QAAQ,IAAI,CAAC,CAAC;YAC5DC,QAAQ,EAAEV,MAAM,CAACU,QAAQ,IAAI,CAAC;YAC9BC,QAAQ,EAAEX,MAAM,CAACY,KAAK,IAAIZ,MAAM,CAACW,QAAQ,IAAI;UAC/C,CAAC;QAAA,CAAC,CAAC;QACH3B,mBAAmB,CAACc,kBAAkB,CAAC;MACzC,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD;QACA7B,mBAAmB,CAAC,EAAE,CAAC;MACzB;IACF,CAAC;IAEDS,YAAY,CAAC,CAAC;;IAEd;IACA,MAAMsB,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,aAAa,EAAE;MACjBjC,WAAW,CAACoC,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhD,SAAS,CAAC,MAAM;IACd;IACA,IAAIkB,eAAe,EAAE,CACrB;EACF,CAAC,EAAE,CAACA,eAAe,EAAEE,YAAY,CAAC,CAAC;EAEnC,MAAMiC,YAAY,GAAIC,SAAS,IAAK;IAClC,MAAMC,IAAI,GAAG,EAAE;IACf,MAAMC,KAAK,GAAG,IAAI3C,IAAI,CAACyC,SAAS,CAAC;IACjCE,KAAK,CAACC,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,GAAGF,KAAK,CAACG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC;;IAEpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,IAAI,GAAG,IAAIhD,IAAI,CAAC2C,KAAK,CAAC;MAC5BK,IAAI,CAACJ,OAAO,CAACD,KAAK,CAACE,OAAO,CAAC,CAAC,GAAGE,CAAC,CAAC;MACjCL,IAAI,CAACO,IAAI,CAACD,IAAI,CAAC;IACjB;IACA,OAAON,IAAI;EACb,CAAC;EAED,MAAMQ,UAAU,GAAIF,IAAI,IAAK;IAC3B,OAAOA,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAE3C,GAAG,EAAE;IAAU,CAAC,CAAC;EAC7E,CAAC;EAED,MAAM4C,eAAe,GAAGA,CAAC5C,GAAG,EAAEC,QAAQ,KAAK;IACzCF,eAAe,CAAC;MAAEC,GAAG;MAAEC;IAAS,CAAC,CAAC;IAClCJ,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMgD,mBAAmB,GAAIlC,MAAM,IAAK;IACtC,IAAI,CAACb,YAAY,CAACE,GAAG,IAAI,CAACF,YAAY,CAACG,QAAQ,EAAE;MAC/CwB,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAE1B,YAAY,CAAC;MACxDgD,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,MAAMC,GAAG,GAAG,GAAGjD,YAAY,CAACE,GAAG,IAAIF,YAAY,CAACG,QAAQ,EAAE;IAE1D,MAAM+C,WAAW,GAAG;MAClB,GAAGxD,QAAQ;MACX,CAACuD,GAAG,GAAGpC;IACT,CAAC;IAEDlB,WAAW,CAACuD,WAAW,CAAC;IACxBrB,YAAY,CAACsB,OAAO,CAAC,UAAU,EAAEpB,IAAI,CAACqB,SAAS,CAACF,WAAW,CAAC,CAAC;IAC7DnD,kBAAkB,CAAC,KAAK,CAAC;IACzBE,eAAe,CAAC;MAAEC,GAAG,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAG,CAAC,CAAC,EAAC;EAC7C,CAAC;EAED,MAAMkD,wBAAwB,GAAGA,CAACnD,GAAG,EAAEC,QAAQ,KAAK;IAClD,MAAM8C,GAAG,GAAG,GAAG/C,GAAG,IAAIC,QAAQ,EAAE;IAChC,MAAM+C,WAAW,GAAG;MAAE,GAAGxD;IAAS,CAAC;IACnC,OAAOwD,WAAW,CAACD,GAAG,CAAC;IACvBtD,WAAW,CAACuD,WAAW,CAAC;IACxBrB,YAAY,CAACsB,OAAO,CAAC,UAAU,EAAEpB,IAAI,CAACqB,SAAS,CAACF,WAAW,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMI,gBAAgB,GAAIpD,GAAG,IAAK;IAChC,IAAIqD,KAAK,GAAG,CAAC;IACblD,SAAS,CAACmD,OAAO,CAAErD,QAAQ,IAAK;MAC9B,MAAM8C,GAAG,GAAG,GAAG/C,GAAG,IAAIC,QAAQ,EAAE;MAChC,MAAMU,MAAM,GAAGnB,QAAQ,CAACuD,GAAG,CAAC;MAC5B,IAAIpC,MAAM,EAAE;QACV0C,KAAK,IAAI1C,MAAM,CAACK,QAAQ;MAC1B;IACF,CAAC,CAAC;IACF,OAAOqC,KAAK;EACd,CAAC;EAED,MAAME,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAIF,KAAK,GAAG,CAAC;IACbnD,UAAU,CAACoD,OAAO,CAAEtD,GAAG,IAAK;MAC1BqD,KAAK,IAAID,gBAAgB,CAACpD,GAAG,CAAC;IAChC,CAAC,CAAC;IACF,OAAOqD,KAAK;EACd,CAAC;EAED,MAAMG,SAAS,GAAGzB,YAAY,CAAC1C,YAAY,CAAC;EAE5C,oBACEH,OAAA;IAAKuE,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BxE,OAAA;MAAKuE,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBxE,OAAA;QAAKuE,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BxE,OAAA;UAAAwE,QAAA,EAAI;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrB5E,OAAA;UAAAwE,QAAA,EAAG;QAGH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BxE,OAAA;UACE6E,OAAO,EAAEA,CAAA,KAAM;YACb,MAAMC,QAAQ,GAAG,IAAIzE,IAAI,CAACF,YAAY,CAAC;YACvC2E,QAAQ,CAAC7B,OAAO,CAAC6B,QAAQ,CAAC5B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC9C,eAAe,CAAC0E,QAAQ,CAAC;UAC3B,CAAE;UACFP,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET5E,OAAA;UAAKuE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBxE,OAAA,CAACL,UAAU;YAAA8E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACd5E,OAAA;YAAAwE,QAAA,GAAM,UACI,EAACjB,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC,EAAC,KAAG,EAACf,UAAU,CAACe,SAAS,CAAC,CAAC,CAAC,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAEN5E,OAAA;UACE6E,OAAO,EAAEA,CAAA,KAAM;YACb,MAAME,QAAQ,GAAG,IAAI1E,IAAI,CAACF,YAAY,CAAC;YACvC4E,QAAQ,CAAC9B,OAAO,CAAC8B,QAAQ,CAAC7B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YACxC9C,eAAe,CAAC2E,QAAQ,CAAC;UAC3B,CAAE;UACFR,SAAS,EAAC,cAAc;UAAAC,QAAA,EACzB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BxE,OAAA;UAAKuE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBxE,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEH,sBAAsB,CAAC;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC5D5E,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACN5E,OAAA;UAAKuE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBxE,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EACxBQ,IAAI,CAACC,KAAK,CAACZ,sBAAsB,CAAC,CAAC,GAAG,CAAC;UAAC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eACN5E,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,eACN5E,OAAA;UAAKuE,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBxE,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEU,MAAM,CAACC,IAAI,CAAC7E,QAAQ,CAAC,CAAC8E;UAAM;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAChE5E,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGN5E,OAAA;QAAKuE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BxE,OAAA;UAAKuE,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/BxE,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACpC3D,SAAS,CAACO,GAAG,CAAET,QAAQ,iBACtBf,OAAA;YAAoBuE,SAAS,EAAC,aAAa;YAAAC,QAAA,EACxCzD,QAAQ,CAACsE,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGvE,QAAQ,CAACwE,KAAK,CAAC,CAAC;UAAC,GAD7CxE,QAAQ;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACN,CAAC,eACF5E,OAAA;YAAKuE,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,EAEL5D,UAAU,CAACQ,GAAG,CAAC,CAACV,GAAG,EAAE0E,QAAQ,kBAC5BxF,OAAA;UAAeuE,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACjCxE,OAAA;YAAKuE,SAAS,EAAC,UAAU;YAAAC,QAAA,gBACvBxE,OAAA;cAAKuE,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAE1D;YAAG;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrC5E,OAAA;cAAKuE,SAAS,EAAC,UAAU;cAAAC,QAAA,EACtBjB,UAAU,CAACe,SAAS,CAACkB,QAAQ,CAAC;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEL3D,SAAS,CAACO,GAAG,CAAET,QAAQ,IAAK;YAC3B,MAAM8C,GAAG,GAAG,GAAG/C,GAAG,IAAIC,QAAQ,EAAE;YAChC,MAAMU,MAAM,GAAGnB,QAAQ,CAACuD,GAAG,CAAC;YAE5B,oBACE7D,OAAA;cAAoBuE,SAAS,EAAC,WAAW;cAAAC,QAAA,EACtC/C,MAAM,gBACLzB,OAAA;gBAAKuE,SAAS,EAAC,WAAW;gBAAAC,QAAA,gBACxBxE,OAAA;kBAAKuE,SAAS,EAAC,aAAa;kBAAAC,QAAA,GACzB/C,MAAM,CAACW,QAAQ,gBACdpC,OAAA;oBACEyF,GAAG,EAAEhE,MAAM,CAACW,QAAS;oBACrBsD,GAAG,EAAEjE,MAAM,CAACI,KAAM;oBAClB0C,SAAS,EAAC,YAAY;oBACtBoB,KAAK,EAAE;sBACLC,KAAK,EAAE,MAAM;sBACbC,MAAM,EAAE,MAAM;sBACdC,YAAY,EAAE,KAAK;sBACnBC,WAAW,EAAE,QAAQ;sBACrBC,SAAS,EAAE,OAAO;sBAClBC,eAAe,EAAE;oBACnB,CAAE;oBACFC,OAAO,EAAGC,CAAC,IAAK;sBACdA,CAAC,CAACC,MAAM,CAACT,KAAK,CAACU,OAAO,GAAG,MAAM;oBACjC,CAAE;oBACFC,MAAM,EAAEA,CAAA,KAAM;sBACZ;oBAAA;kBACA;oBAAA7B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,gBAEF5E,OAAA;oBACE2F,KAAK,EAAE;sBACLC,KAAK,EAAE,MAAM;sBACbC,MAAM,EAAE,MAAM;sBACdC,YAAY,EAAE,KAAK;sBACnBC,WAAW,EAAE,QAAQ;sBACrBE,eAAe,EAAE,SAAS;sBAC1BI,OAAO,EAAE,MAAM;sBACfE,UAAU,EAAE,QAAQ;sBACpBC,cAAc,EAAE,QAAQ;sBACxBC,QAAQ,EAAE,MAAM;sBAChBC,KAAK,EAAE;oBACT,CAAE;oBAAAlC,QAAA,EACH;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CACN,eACD5E,OAAA;oBAAKuE,SAAS,EAAC,aAAa;oBAAAC,QAAA,gBAC1BxE,OAAA;sBAAAwE,QAAA,EAAK/C,MAAM,CAACI;oBAAK;sBAAA4C,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eACvB5E,OAAA;sBAAKuE,SAAS,EAAC,aAAa;sBAAAC,QAAA,gBAC1BxE,OAAA;wBAAAwE,QAAA,GAAO/C,MAAM,CAACK,QAAQ,EAAC,MAAI;sBAAA;wBAAA2C,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC,eAClC5E,OAAA;wBAAAwE,QAAA,gBACExE,OAAA,CAACJ,OAAO;0BAAA6E,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAE,CAAC,KAAC,EAACnD,MAAM,CAACO,WAAW,EAAC,KAClC;sBAAA;wBAAAyC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAM,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACJ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACN5E,OAAA;kBACE6E,OAAO,EAAEA,CAAA,KACPZ,wBAAwB,CAACnD,GAAG,EAAEC,QAAQ,CACvC;kBACDwD,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,eAE7BxE,OAAA,CAACN,QAAQ;oBAAA+E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACN,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,gBAEN5E,OAAA;gBACE6E,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAAC5C,GAAG,EAAEC,QAAQ,CAAE;gBAC9CwD,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAExBxE,OAAA,CAACP,MAAM;kBAAAgF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eACV5E,OAAA;kBAAAwE,QAAA,GAAM,MAAI,EAACzD,QAAQ;gBAAA;kBAAA0D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrB;YACT,GArEO7D,QAAQ;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAsEb,CAAC;UAEV,CAAC,CAAC,eAEF5E,OAAA;YAAKuE,SAAS,EAAC,YAAY;YAAAC,QAAA,eACzBxE,OAAA;cAAKuE,SAAS,EAAC,aAAa;cAAAC,QAAA,GAAEN,gBAAgB,CAACpD,GAAG,CAAC,EAAC,MAAI;YAAA;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC;QAAA,GAzFE9D,GAAG;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA0FR,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAGLlE,eAAe,iBACdV,OAAA;QACEuE,SAAS,EAAC,eAAe;QACzBM,OAAO,EAAEA,CAAA,KAAM;UACblE,kBAAkB,CAAC,KAAK,CAAC;QAC3B,CAAE;QAAA6D,QAAA,eAEFxE,OAAA;UAAKuE,SAAS,EAAC,eAAe;UAACM,OAAO,EAAGsB,CAAC,IAAKA,CAAC,CAACQ,eAAe,CAAC,CAAE;UAAAnC,QAAA,gBACjExE,OAAA;YAAKuE,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BxE,OAAA;cAAAwE,QAAA,GAAI,sBACkB,EAAC5D,YAAY,CAACE,GAAG,EAAC,GAAC,EAACF,YAAY,CAACG,QAAQ;YAAA;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3D,CAAC,eACL5E,OAAA;cACE6E,OAAO,EAAEA,CAAA,KAAM;gBACblE,kBAAkB,CAAC,KAAK,CAAC;cAC3B,CAAE;cACF4D,SAAS,EAAC,aAAa;cAAAC,QAAA,EACxB;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAEN5E,OAAA;YAAKuE,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BhE,gBAAgB,CAACgB,GAAG,CAAEC,MAAM,iBAC3BzB,OAAA;cAEE6E,OAAO,EAAGsB,CAAC,IAAK;gBACdA,CAAC,CAACS,cAAc,CAAC,CAAC;gBAClBT,CAAC,CAACQ,eAAe,CAAC,CAAC;gBACnBhD,mBAAmB,CAAClC,MAAM,CAAC;cAC7B,CAAE;cACF8C,SAAS,EAAC,eAAe;cAAAC,QAAA,gBAEzBxE,OAAA;gBAAKuE,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAC1B/C,MAAM,CAACW,QAAQ,gBACdpC,OAAA;kBACEyF,GAAG,EAAEhE,MAAM,CAACW,QAAS;kBACrBsD,GAAG,EAAEjE,MAAM,CAACI,KAAM;kBAClB0C,SAAS,EAAC,YAAY;kBACtBoB,KAAK,EAAE;oBACLC,KAAK,EAAE,MAAM;oBACbC,MAAM,EAAE,OAAO;oBACfG,SAAS,EAAE,OAAO;oBAClBC,eAAe,EAAE;kBACnB,CAAE;kBACFC,OAAO,EAAGC,CAAC,IAAK;oBACdA,CAAC,CAACC,MAAM,CAACT,KAAK,CAACU,OAAO,GAAG,MAAM;kBACjC,CAAE;kBACFC,MAAM,EAAEA,CAAA,KAAM;oBACZ;kBAAA;gBACA;kBAAA7B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,gBAEF5E,OAAA;kBACE2F,KAAK,EAAE;oBACLC,KAAK,EAAE,MAAM;oBACbC,MAAM,EAAE,OAAO;oBACfI,eAAe,EAAE,SAAS;oBAC1BI,OAAO,EAAE,MAAM;oBACfE,UAAU,EAAE,QAAQ;oBACpBC,cAAc,EAAE,QAAQ;oBACxBC,QAAQ,EAAE,MAAM;oBAChBC,KAAK,EAAE;kBACT,CAAE;kBAAAlC,QAAA,EACH;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK;cACN;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC,eACN5E,OAAA;gBAAKuE,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC7BxE,OAAA;kBAAAwE,QAAA,EAAK/C,MAAM,CAACI;gBAAK;kBAAA4C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACvB5E,OAAA;kBAAKuE,SAAS,EAAC,aAAa;kBAAAC,QAAA,gBAC1BxE,OAAA;oBAAAwE,QAAA,GAAO/C,MAAM,CAACK,QAAQ,EAAC,MAAI;kBAAA;oBAAA2C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAClC5E,OAAA;oBAAAwE,QAAA,gBACExE,OAAA,CAACJ,OAAO;sBAAA6E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,KAAC,EAACnD,MAAM,CAACO,WAAW,EAAC,KAClC;kBAAA;oBAAAyC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eACP5E,OAAA;oBAAAwE,QAAA,gBACExE,OAAA,CAACH,OAAO;sBAAA4E,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAC,KAAC,EAACnD,MAAM,CAACU,QAAQ,EAAC,WAC/B;kBAAA;oBAAAsC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,GAvDDnD,MAAM,CAACE,EAAE;cAAA8C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAwDX,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAA1E,EAAA,CApYKD,WAAW;AAAA4G,EAAA,GAAX5G,WAAW;AAsYjB,eAAeA,WAAW;AAAA,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}